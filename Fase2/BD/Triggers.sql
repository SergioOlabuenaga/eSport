-- Trigger para controlar que en un equipo no haya más de 6 jugadores

CREATE OR REPLACE TRIGGER Maximo_Jugadores
BEFORE INSERT ON JUGADOR FOR EACH ROW

DECLARE
    V_COUNT NUMBER(1);
BEGIN
    SELECT COUNT(*) INTO V_COUNT FROM JUGADOR
    WHERE ID_EQUIPO = :new.ID_EQUIPO;
    IF (V_COUNT > 5) THEN
        RAISE_APPLICATION_ERROR (-20001, 'Error: Este equipo ya tiene 6
            jugadores');
    END IF;
END;

-- Trigger para controlar que no se generen las jornadas

CREATE OR REPLACE TRIGGER Minimo_Jugadores
    AFTER INSERT OR UPDATE ON Jornada FOR EACH ROW
DECLARE
    CURSOR CUR_EQUIPO IS
    SELECT ID_EQUIPO
    FROM EQUIPO;
    ID_COMPARADO EQUIPO.ID_EQUIPO%TYPE;
    COUNT_JUGADORES NUMBER(1);
BEGIN
    OPEN CUR_EQUIPO;
    LOOP
        FETCH CUR_EQUIPO INTO ID_COMPARADO;
        SELECT COUNT(*) INTO COUNT_JUGADORES FROM JUGADOR 
        WHERE ID_EQUIPO = ID_COMPARADO;
        
        IF (COUNT_JUGADORES < 2) THEN
            RAISE_APPLICATION_ERROR (-20002, 'Error: Un equipo (ID: ' || 
            ID_COMPARADO ||') no tiene los jugadores mínimos');
        END IF;
        EXIT WHEN CUR_EQUIPO%NOTFOUND;
    END LOOP;
    CLOSE CUR_EQUIPO;
END;

CREATE OR REPLACE TRIGGER Calendario_Completo_Equipo
BEFORE UPDATE OR INSERT OR DELETE ON EQUIPO FOR EACH ROW
DECLARE
    CURSOR CUR_JORNADAS IS
    SELECT ID_JORNADA
    FROM JORNADA;
    V_TEMP JORNADA.ID_JORNADA%TYPE;
BEGIN
    OPEN CUR_JORNADAS;
    LOOP
        FETCH CUR_EQUIPO INTO V_TEMP;
        EXIT WHEN CUR_EQUIPO%NOTFOUND;
    END LOOP;
    IF (CUR_JORNADAS%FOUND) THEN
        RAISE_APPLICATION_ERROR(-20004,'El calendario está completo y
        no se pueden modificar los equipos');
    END IF;
    CLOSE CUR_JORNADAS;
END;

CREATE OR REPLACE TRIGGER Calendario_Completo_Jugador
BEFORE UPDATE OR INSERT OR DELETE ON JUGADOR FOR EACH ROW
DECLARE
    CURSOR CUR_JORNADAS IS
    SELECT ID_JORNADA
    FROM JORNADA;
    V_TEMP JORNADA.ID_JORNADA%TYPE;
BEGIN
    OPEN CUR_JORNADAS;
    LOOP
        FETCH CUR_EQUIPO INTO V_TEMP;
        EXIT WHEN CUR_EQUIPO%NOTFOUND;
    END LOOP;
    IF (CUR_JORNADAS%FOUND) THEN
        RAISE_APPLICATION_ERROR(-20005,'El calendario está completo y
        no se pueden modificar los jugadores');
    END IF;
    CLOSE CUR_JORNADAS;
END;

CREATE OR REPLACE TRIGGER Clasificar_Equipo
BEFORE INSERT OR UPDATE ON EQUIPO FOR EACH ROW

DECLARE
   V_ID EQUIPO.ID_EQUIPO%TYPE;
BEGIN
    SELECT (MAX(ID_EQUIPO)) INTO V_ID FROM EQUIPO;
    INSERT INTO CLASIFICACION (ID_EQUIPO, TEMPORADA) VALUES 
    (V_ID, 1);
END;

CREATE OR REPLACE TRIGGER Salario_Equipo
FOR UPDATE OR INSERT ON JUGADOR COMPOUND TRIGGER

v_ID NUMBER;
v_SALARIO NUMBER;
v_TOTAL NUMBER(10);

AFTER EACH ROW IS
BEGIN
    v_ID := :new.ID_Equipo;
    v_SALARIO := :new.Sueldo;
END AFTER EACH ROW;

AFTER STATEMENT IS
BEGIN
    SELECT SUM(SUELDO) INTO v_TOTAL FROM JUGADOR
    WHERE ID_EQUIPO = v_ID;
    v_TOTAL := v_TOTAL + v_SALARIO;
    IF (v_TOTAL + v_SALARIO > '200000') THEN
        RAISE_APPLICATION_ERROR (-20006, 'Error: No puede haber un sueldo
            total de más de 200.000 euros por equipo');
    END IF;
END AFTER STATEMENT;
END Salario_Equipo;

COMMIT;